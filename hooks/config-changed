#!/usr/bin/env python3

# Copyright (c) 2017 Paul D. Gear
# License: GPLv3+ (see COPYING.txt for details)

from charmhelpers.core import hookenv
from charmhelpers.core import templating

import os
import os.path

import version


def create_context():
    config = hookenv.config()
    reboot_time = config['reboot-time']
    if reboot_time == 'immediate':
        reboot_time = 'now'
    if reboot_time == 'none':
        reboot = 'false'
    else:
        reboot = 'true'
    context = {
        'unattended_installonshutdown': 'false',
        'unattended_mail': '',
        'unattended_mailonlyonerror': 'true',
        'unattended_reboot': reboot,
        'unattended_reboot_time': reboot_time,
        'unattended_removeunused': config['remove-unused'],
    }
    return context


def remove_old_config():
    for oldfile in [ '/etc/apt/apt.conf.d/99unattended-upgrades', '/etc/cron.hourly/unattended-charm' ]:
        if os.path.exists(oldfile):
            os.unlink(oldfile)


def write_configuration(context):
    templating.render(
        source='99unattended-upgrades',
        target='/etc/apt/apt.conf.d/99charm-unattended',
        context=context,
        perms=0o444,
    )

    templating.render(
        source='cron.hourly',
        target='/etc/cron.hourly/99charm-unattended',
        context={},
        perms=0o555,
    )

    templating.render(
        source='rcS',
        target='/etc/default/rcS',
        context={},
        perms=0o444,
    )


hookenv.status_set('maintenance', 'Configuring')
hookenv.application_version_set(version.VERSION)
remove_old_config()
context = create_context()
write_configuration(context)
hookenv.status_set('active', 'Configured')
